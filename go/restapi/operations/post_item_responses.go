// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/wobenshain/fullstack-developer-challenge/go/restapi/models"
)

// PostItemOKCode is the HTTP code returned for type PostItemOK
const PostItemOKCode int = 200

/*PostItemOK create new item

swagger:response postItemOK
*/
type PostItemOK struct {

	/*
	  In: Body
	*/
	Payload *models.Item `json:"body,omitempty"`
}

// NewPostItemOK creates PostItemOK with default headers values
func NewPostItemOK() *PostItemOK {

	return &PostItemOK{}
}

// WithPayload adds the payload to the post item o k response
func (o *PostItemOK) WithPayload(payload *models.Item) *PostItemOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post item o k response
func (o *PostItemOK) SetPayload(payload *models.Item) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostItemOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostItemDefault generic error response

swagger:response postItemDefault
*/
type PostItemDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostItemDefault creates PostItemDefault with default headers values
func NewPostItemDefault(code int) *PostItemDefault {
	if code <= 0 {
		code = 500
	}

	return &PostItemDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post item default response
func (o *PostItemDefault) WithStatusCode(code int) *PostItemDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post item default response
func (o *PostItemDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post item default response
func (o *PostItemDefault) WithPayload(payload *models.Error) *PostItemDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post item default response
func (o *PostItemDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostItemDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
